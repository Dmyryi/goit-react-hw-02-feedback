{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/feedback/FeedBack.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","this","props","options","map","btn","value","type","onClick","e","onLeaveFeedback","Component","defaultProps","Statistics","className","style","statistics","statistics__title","statistics__list","Object","entries","stat","key","statistics__item","statistics__name","shortid","generate","total","positivePercentage","good","neutral","bad","Notification","notification","message","App","state","currentBtnValue","currentTarget","setState","prevState","countTotalFeedback","values","reduce","acc","val","countZero","countPositiveFeedbackPercentage","Math","trunc","btnNames","keys","ReactDom","render","document","querySelector"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,kBAAoB,sCAAsC,iBAAmB,qCAAqC,iBAAmB,qCAAqC,iBAAmB,uC,oICGrPC,E,4JAWI,WAAS,IAAD,OACT,OACG,8BACCC,KAAKC,MAAMC,QAAQC,KAAI,SAAAC,GAAG,OACzB,wBACEC,MAAOD,EAEPE,KAAK,SACLC,QAAS,SAAAC,GAAC,OAAI,EAAKP,MAAMQ,gBAAgBD,IAJ3C,SAMGJ,GAJIA,Y,GAjBSM,aAAxBX,EACKY,aAAe,CACpBT,QAAS,IA4BAH,Q,2CC7BTa,E,4JAUJ,WACE,OACE,sBAAKC,UAAWC,IAAMC,WAAtB,UACE,oBAAIF,UAAWC,IAAME,kBAArB,wBACA,qBAAIH,UAAWC,IAAMG,iBAArB,UACGC,OAAOC,QAAQnB,KAAKC,MAAMmB,MAAMjB,KAAI,YAAmB,IAAD,mBAAhBkB,EAAgB,KAAXhB,EAAW,KACrD,OACE,qBAAIQ,UAAWC,IAAMQ,iBAArB,UACE,uBACET,UAAWC,IAAMS,iBADnB,UAIGF,EAJH,IAIS,MAFFG,IAAQC,YAIf,+BAAgCpB,GAArBmB,IAAQC,cAPuBD,IAAQC,eAWxD,qBAAIZ,UAAWC,IAAMQ,iBAArB,UACE,0CAAWE,IAAQC,YACnB,+BAAgCzB,KAAKC,MAAMyB,OAAhCF,IAAQC,cAFuBD,IAAQC,YAIpD,qBAAIZ,UAAWC,IAAMQ,iBAArB,UACE,sDAAWE,IAAQC,YACnB,iCACGzB,KAAKC,MAAM0B,mBADd,MAAWH,IAAQC,cAFuBD,IAAQC,sB,GAhCrCf,aAAnBE,EACGD,aAAe,CACpBS,KAAM,CAAEQ,KAAM,EAAGC,QAAS,EAAGC,IAAK,GAClCJ,MAAO,GAyCId,Q,kBC5CTmB,E,4JAOJ,WACE,OACE,oBAA6BlB,UAAWC,IAAMkB,aAA9C,SACGhC,KAAKC,MAAMgC,SADLT,IAAQC,gB,GATIf,aAArBqB,EACGpB,aAAe,CACpBsB,QAAS,KAcEF,QChBTG,E,4MACJC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPrB,gBAAkB,SAAAD,GAChB,IAAM4B,EAAkB5B,EAAE6B,cAAchC,MACxC,EAAKiC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBH,EAAkBG,EAAUH,GAAmB,Q,EAIpDI,mBAAqB,WAEnB,OADkBtB,OAAOuB,OAAO,EAAKN,OACpBO,QAAO,SAACC,EAAKC,GAE5B,OADAD,GAAOC,M,EAIXC,UAAY,WACV,OACsB,IAApB,EAAKV,MAAMP,MACY,IAAvB,EAAKO,MAAMN,SACQ,IAAnB,EAAKM,MAAML,K,EAOfgB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKb,MAAMP,KAAO,EAAKY,qBAAwB,M,4CAGpE,WACE,IAAMS,EAAW/B,OAAOgC,KAAKlD,KAAKmC,OAClC,OACE,qBAAKtB,UAAU,MAAf,SACE,oCACE,cAAC,EAAD,CACEX,QAAS+C,EACTxC,gBAAiBT,KAAKS,kBAEvBT,KAAK6C,YACJ,cAAC,EAAD,CAAcZ,QAAQ,sBAEtB,cAAC,EAAD,CACEb,KAAMpB,KAAKmC,MACXT,MAAO1B,KAAKwC,qBACZb,mBAAoB3B,KAAK8C,6C,GApDrBpC,aA6DHwB,IC9DfiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.644441ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__L28jM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2wXrz\",\"statistics__title\":\"Statistics_statistics__title__1Ia1s\",\"statistics__list\":\"Statistics_statistics__list__2FdmS\",\"statistics__name\":\"Statistics_statistics__name___iqA-\",\"statistics__item\":\"Statistics_statistics__item__3A7es\"};","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { render } from '@testing-library/react';\r\n\r\nclass FeedbackOptions extends Component {\r\n    static defaultProps = {\r\n      options: [],\r\n    };\r\n    static propTypes = {\r\n      options: PropTypes.array.isRequired,\r\n      onLeaveFeedback: PropTypes.func.isRequired,\r\n    };\r\n\r\n\r\n      \r\n          render(){\r\n         return(\r\n            <div>\r\n            {this.props.options.map(btn => (\r\n              <button\r\n                value={btn}\r\n                key={btn}\r\n                type=\"button\"\r\n                onClick={e => this.props.onLeaveFeedback(e)}\r\n              >\r\n                {btn}\r\n              </button>\r\n            ))}\r\n          </div>\r\n         ); \r\n        }\r\n        \r\n    \r\n}\r\nexport default FeedbackOptions;","import style from './Statistics.module.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nclass Statistics extends Component {\r\n  static defaultProps = {\r\n    stat: { good: 0, neutral: 0, bad: 0 },\r\n    total: 0,\r\n  };\r\n  static propTypes = {\r\n    stat: PropTypes.object.isRequired,\r\n    total: PropTypes.number,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.statistics}>\r\n        <h2 className={style.statistics__title}>Statistics</h2>\r\n        <ul className={style.statistics__list}>\r\n          {Object.entries(this.props.stat).map(([key, value]) => {\r\n            return (\r\n              <li className={style.statistics__item} key={shortid.generate()}>\r\n                <span\r\n                  className={style.statistics__name}\r\n                  key={shortid.generate()}\r\n                >\r\n                  {key}:{' '}\r\n                </span>\r\n                <span key={shortid.generate()}>{value}</span>\r\n              </li>\r\n            );\r\n          })}\r\n          <li className={style.statistics__item} key={shortid.generate()}>\r\n            <span key={shortid.generate()}>Total: </span>\r\n            <span key={shortid.generate()}>{this.props.total}</span>\r\n          </li>\r\n          <li className={style.statistics__item} key={shortid.generate()}>\r\n            <span key={shortid.generate()}>Positive feedback: </span>\r\n            <span key={shortid.generate()}>\r\n              {this.props.positivePercentage}%\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;","import style from './Notification.module.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nclass Notification extends Component {\r\n  static defaultProps = {\r\n    message: ' ',\r\n  };\r\n  static propTypes = {\r\n    Message: PropTypes.string,\r\n  };\r\n  render() {\r\n    return (\r\n      <h2 key={shortid.generate()} className={style.notification}>\r\n        {this.props.message}\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport Feedback from './components/feedback/FeedBack';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const currentBtnValue = e.currentTarget.value;\n    this.setState(prevState => ({\n      ...prevState,\n      [currentBtnValue]: prevState[currentBtnValue] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const valuesArr = Object.values(this.state);\n    return valuesArr.reduce((acc, val) => {\n      acc += val;\n      return acc;\n    });\n  };\n  countZero = () => {\n    if (\n      this.state.good === 0 &&\n      this.state.neutral === 0 &&\n      this.state.bad === 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.trunc((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const btnNames = Object.keys(this.state);\n    return (\n      <div className=\"App\">\n        <section>\n          <Feedback\n            options={btnNames}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n          {this.countZero() ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              stat={this.state}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n// ================================================================\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}